function [U, V, W, S] = analyticalLambVortex(x, y, xc_1, xc_2, yc_1, yc_2, R, Uo, A)

% Horizontal component of velocity
U = (R.*Uo.*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_1).^2 + (y - yc_1).^2))./R.^2) - 1).*(y - yc_1))./((x - xc_1).^2 + (y - yc_1).^2) - (R.*Uo.*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_2).^2 + (y - yc_2).^2))./R.^2) - 1).*(y - yc_2))./((x - xc_2).^2 + (y - yc_2).^2);

% Vertical component of velocity
V = (R.*Uo.*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_2).^2 + (y - yc_2).^2))./R.^2) - 1).*(x - xc_2))./((x - xc_2).^2 + (y - yc_2).^2) - (R.*Uo.*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_1).^2 + (y - yc_1).^2))./R.^2) - 1).*(x - xc_1))./((x - xc_1).^2 + (y - yc_1).^2);

% Velocity gradients
% dv ./ dx
dvdx = (R.*Uo.*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_2).^2 + (y - yc_2).^2))./R.^2) - 1))./((x - xc_2).^2 + (y - yc_2).^2) - (R.*Uo.*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_1).^2 + (y - yc_1).^2))./R.^2) - 1))./((x - xc_1).^2 + (y - yc_1).^2) + (R.*Uo.*(2.*x - 2.*xc_1).*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_1).^2 + (y - yc_1).^2))./R.^2) - 1).*(x - xc_1))./((x - xc_1).^2 + (y - yc_1).^2).^2 - (R.*Uo.*(2.*x - 2.*xc_2).*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_2).^2 + (y - yc_2).^2))./R.^2) - 1).*(x - xc_2))./((x - xc_2).^2 + (y - yc_2).^2).^2 + (A.*Uo.*exp(-(A.*((x - xc_1).^2 + (y - yc_1).^2))./R.^2).*(2.*x - 2.*xc_1).*(1./(2.*A) + 1).*(x - xc_1))./(R.*((x - xc_1).^2 + (y - yc_1).^2)) - (A.*Uo.*exp(-(A.*((x - xc_2).^2 + (y - yc_2).^2))./R.^2).*(2.*x - 2.*xc_2).*(1./(2.*A) + 1).*(x - xc_2))./(R.*((x - xc_2).^2 + (y - yc_2).^2));

% du ./ dy
dudy = (R.*Uo.*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_1).^2 + (y - yc_1).^2))./R.^2) - 1))./((x - xc_1).^2 + (y - yc_1).^2) - (R.*Uo.*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_2).^2 + (y - yc_2).^2))./R.^2) - 1))./((x - xc_2).^2 + (y - yc_2).^2) - (R.*Uo.*(2.*y - 2.*yc_1).*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_1).^2 + (y - yc_1).^2))./R.^2) - 1).*(y - yc_1))./((x - xc_1).^2 + (y - yc_1).^2).^2 + (R.*Uo.*(2.*y - 2.*yc_2).*(1./(2.*A) + 1).*(exp(-(A.*((x - xc_2).^2 + (y - yc_2).^2))./R.^2) - 1).*(y - yc_2))./((x - xc_2).^2 + (y - yc_2).^2).^2 - (A.*Uo.*exp(-(A.*((x - xc_1).^2 + (y - yc_1).^2))./R.^2).*(2.*y - 2.*yc_1).*(1./(2.*A) + 1).*(y - yc_1))./(R.*((x - xc_1).^2 + (y - yc_1).^2)) + (A.*Uo.*exp(-(A.*((x - xc_2).^2 + (y - yc_2).^2))./R.^2).*(2.*y - 2.*yc_2).*(1./(2.*A) + 1).*(y - yc_2))./(R.*((x - xc_2).^2 + (y - yc_2).^2));

% Shearing
S = dvdx + dudy;


% Vorticity
W = dvdx - dudy;

% Set nans and infs to zero
U(~isfinite(U)) = 0;
V(~isfinite(V)) = 0;
W(~isfinite(W)) = 0;
S(~isfinite(S)) = 0;


end

